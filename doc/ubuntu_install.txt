#
# minimal server install from ubunto 9.10 server install CD
#

LVM entire disk

computer name opencellpager

adduser opencellpager
adduser opencellpager admin

no security updates

additional packages: opensshserver

reboot

ifconfig to show ip address so we can ssh in

# in my case, this time, 192.168.1.113 (will vary with DHCP)

#
# now we can turn off the monitor and treat the box like a server
#

ssh opencellpager@192.168.1.114

mkdir .ssh
chmod g-w .ssh


# ssh - on workstation
#cat ~/.ssh/id_dsa.pub | ssh opencellpager@192.168.1.113 "cat >> .ssh/authorized_keys2"

chmod 0600 $HOME/.ssh/authorized_keys2
cd $HOME/.ssh && ln -s authorized_keys2 authorized_keys

# create a public key for the server (for git)
test -e .ssh/id_dsa.pub || ssh-keygen -t dsa

# go to githup (https://github.com/account) and add key to toliwaga account to permit access from this server
# need to add the SSH public key from server ~/.ssh
# added as opencellpager@pilot (don't think title matters)


################


# following http://www.hackido.com/2009/11/install-ruby-on-rails-on-ubuntu-karmic.html

sudo apt-get update
sudo apt-get dist-upgrade
sudo apt-get install build-essential
sudo apt-get install ruby ri rdoc mysql-server libmysql-ruby ruby1.8-dev irb1.8 libdbd-mysql-perl libdbi-perl libmysql-ruby1.8 libnet-daemon-perl libplrpc-perl libreadline-ruby1.8 libruby1.8 mysql-client-5.1 mysql-common mysql-server-5.1 rdoc1.8 ri1.8 ruby1.8 irb libopenssl-ruby libopenssl-ruby1.8 libhtml-template-perl mysql-server-core-5.1 libmysqlclient16 libreadline5 psmisc

# problems with 10.04
# sudo apt-get install libmysqlclient15off

sudo apt-get install putty

#
# rubygems 1.3.5
#
mkdir installs
cd installs
wget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.5.tgz
tar xvzf rubygems-1.3.5.tgz
cd rubygems-1.3.5
sudo ruby setup.rb
sudo ln -s /usr/bin/gem1.8 /usr/bin/gem
cd ~/

#
# rails 2.3.5
#
sudo gem install rails --no-rdoc --no-ri --version 2.3.5

# git 1.6.3.3
sudo apt-get install git-core

#
# mysql gem
#

sudo apt-get install libmysqlclient-dev
sudo gem install mysql --no-rdoc --no-ri

# prep the app dir

sudo mkdir -p /var/www/ocp
sudo chown -R opencellpager:opencellpager /var/www/ocp
# note: you do not want current to be a dir (since this will be a link later)

# libs for phusion passenger and nginx

sudo apt-get install libc6 libpcre3 libpcre3-dev libpcrecpp0 libssl0.9.8 libssl-dev zlib1g zlib1g-dev lsb-base
apt-get install libcurl4-openssl-dev

sudo gem install passenger --no-rdoc --no-ri

sudo passenger-install-nginx-module

cat /opt/nginx/conf/nginx.conf


/etc/init.d
sudo nano nginx
<<
#! /bin/sh

### BEGIN INIT INFO
# Provides:          nginx
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO

PATH=/opt/nginx/sbin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/opt/nginx/sbin/nginx
NAME=nginx
DESC=nginx

test -x $DAEMON || exit 0

# Include nginx defaults if available
if [ -f /etc/default/nginx ] ; then
        . /etc/default/nginx
fi

set -e

case "$1" in
  start)
        echo -n "Starting $DESC: "
        start-stop-daemon --start --quiet --pidfile /opt/nginx/logs/$NAME.pid \
                --exec $DAEMON -- $DAEMON_OPTS
        echo "$NAME."
        ;;
  stop)
        echo -n "Stopping $DESC: "
        start-stop-daemon --stop --quiet --pidfile /opt/nginx/logs/$NAME.pid \
                --exec $DAEMON
        echo "$NAME."
        ;;
  restart|force-reload)
        echo -n "Restarting $DESC: "
        start-stop-daemon --stop --quiet --pidfile \
                /opt/nginx/logs/$NAME.pid --exec $DAEMON
        sleep 1
        start-stop-daemon --start --quiet --pidfile \
                /opt/nginx/logs/$NAME.pid --exec $DAEMON -- $DAEMON_OPTS
        echo "$NAME."
        ;;
  reload)
          echo -n "Reloading $DESC configuration: "
          start-stop-daemon --stop --signal HUP --quiet --pidfile     /opt/nginx/logs/$NAME.pid \
              --exec $DAEMON
          echo "$NAME."
          ;;
      *)
            N=/etc/init.d/$NAME
            echo "Usage: $N {start|stop|restart|reload|force-reload}" >&2
            exit 1
            ;;
    esac

    exit 0

>>


sudo chmod +x /etc/init.d/nginx
sudo /usr/sbin/update-rc.d -f nginx defaults

# start ngingx
sudo /etc/init.d/nginx start

# check logs
ls /opt/nginx/logs/


###################

# copy the config/pilot dir to config/local

# update config/deploy.rb to include the new deploy target

# on workstation

cap deploy:setup  --set-before ocp_server=pilot

cap deploy:check --set-before ocp_server=pilot

# on server

sudo mysqladmin create ocp_production -u root -p

# mysqladmin create ocp_development -u root -p
# for local development

sudo mysql -u root -p
GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER,INDEX ON ocp_production.* TO opencellpager@localhost IDENTIFIED BY 'YOUR PASSWORD';
FLUSH PRIVILEGES;
exit

# create config directory
mkdir /var/www/ocp/config

# create database.yml file with password to mysql server


cd /var/www/ocp/config
nano database.yml
# copy from config/local
# note: the password you should use comes from the privileges above

chmod 600 /var/www/ocp/config/database.yml

###################

# backup database

# on server

cd /home/opencellpager
mkdir backup
mkdir tasks

sudo mysql -u root -p
GRANT LOCK TABLES ON ocp_production.* TO opencellpager@localhost IDENTIFIED BY 'PASSWORD';
FLUSH PRIVILEGES;
exit

# need to get source from git by doing a deploy
# first make sure git RSA fingerprint is on the server
git ls-remote git@github.com:narath/lifeline.git master

# on local machine
cap deploy --set-before ocp_server=blue
cap deploy:migrate --set-before ocp_server=blue

ls /var/www/ocp/current/config/pilot
cp /var/www/ocp/current/config/pilot/ocp_crontab.txt /home/opencellpager/tasks/crontab.txt
crontab /home/opencellpager/tasks/crontab.txt

# update nginx conf
cat /opt/nginx/conf/nginx.conf
sudo nano /opt/nginx/conf/nginx.conf
# make sure the following is added
<<
user opencellpager opencellpager;
>>

<<
    server {
        listen       80;
        server_name  opencellpager.localhost;
        root /var/www/ocp/current/public;
        passenger_enabled on;
        index index.html index.htm;
        client_max_body_size 50M;

        if (-f $document_root/system/maintenance.html) {
          rewrite ^(.*)$ /system/maintenance.html break;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
>>

######## gems for serial modem

# only needed if using the simple ocpdemon
# sudo gem sources -a http://gems.github.com
# sudo gem install --ignore-dependencies adammck-rubygsm
# sudo gem install --ignore-dependencies toholio-serialport

# test modem
# if using usb modem, check dmesg to see which usb it is assigned to
# Ubuntu server often uses ttyUSB0
dmesg
screen /dev/ttyUSB0

# to reset the modem (if it is failing on CPIN)
AT+CFUN=1

######## Install Kannell

# install dependencies
sudo apt-get install libxml2-dev

# Download Kannel
cd ~/installs/
wget http://www.kannel.org/download/1.4.3/gateway-1.4.3.tar.gz
tar -xzvf gateway-1.4.3.tar.gz
cd gateway-1.4.3
./configure --prefix=/usr/local/kannel --enable-start-stop-daemon
sudo make > make.log &
# a gotcha above is if you have not entered sudo for a while (it needs to have cached the password)
tail -f make.log

sudo make install > install.log &
tail -f install.log

#BOXPATH=/usr/local/kannel/sbin
#PIDFILES=/var/run/kannel
#CONF=/etc/kannel/kannel.conf

# file you need to copy over
/etc/kannel/kannel.conf
/etc/kannel/modems.conf

# copy over the needed files
cd config/kannel
sftp opencellpager@41.221.60.25
put kannel
put kannel.conf
put modems.conf

sudo mkdir /etc/kannel
#sudo mkdir /var/run/kannel
#dont create the above so that the kannel user can create it and own it

# update kannel.conf

cd /etc/kannel
sudo nano kannel.conf

chmod a+x kannel
sudo mv kannel /etc/init.d
sudo mv *.conf /etc/kannel

# create the kannel user
sudo useradd kannel
(add password) (i use help333)
# add to dialout group so it can use the ttyS0
sudo usermod -G dialout kannel

# before you can use it, you need to stop the ocp daemon and uninstall it
# only an issue if not a new install
# cd /etc/init.d
# sudo ./ocpdaemon stop
# I would suggest after stopping it, that you test the kannel server first
# sudo update-rc.d -f ocpdaemon remove

# test services
sudo /etc/init.d/kannel start

# check to see that it is running
ps ax | grep kannel
#http://192.168.1.203:13000/status
#http://41.221.60.25:13000/status - cannot do because blocked

# by installing the above - kannel is already installed into the system
# if not try the following
# install
sudo update-rc.d kannel defaults 98 02

# to remove
#sudo ./kannel stop
#sudo update-rc.d -f kannel remove

######### Configure OCP system

Org settings:
kannel
<<
kannel-server=127.0.0.1,kannel-port=13013,
kannel-username=opencellpager,kannel-password=PASSWORD,
dlr-url=http://127.0.0.1/kannel/deliveryreport,
dlr-mask=31,receive-url=http://127.0.0.1/kannel/receive
>>

######################
#### SSL Setup
######################
# following instructions from http://wiki.nginx.org/HttpSslModule
# as noted above - you can tell that nginx was built with ssl support

sudo vim /opt/nginx/conf/nginx.conf
